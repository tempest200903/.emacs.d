#+LAST_UPDATED: 2014-09-09
* my-emacs-task
  :PROPERTIES:
  :CATEGORY: 〈my-emacs-task〉
  :END:
** ~/.emacs.d/inits/my-howm.el
- [[~/.emacs.d/inits/my-howm.el]]
# ;; (setq howm-search-path '("N:/howm/2013/10" "N:/howm/2013/09"))
# ;; (setq howm-search-other-dir t) ;; howm-toggle-search-other-dir のトグルの初期値 (t か nil)
# ;; TODO 変数 howm-search-path の設定を my-emacs-custom.el に移動する。
** CANCELLED ~/.emacs.d/inits/my-anything-basis.el
   CLOSED: [2014-09-10 水 18:27]
- (define-key isearch-mode-map (kbd "C-t") 'anything-c-moccur-from-isearch)
  これを利用可能にするべし。
** DONE org-mode link を相対パスから絶対パスに変更する
   CLOSED: [2013-11-06 水 13:55]
- org-occur-link-in-agenda-files は相対パスを見つけられない。
- http://orgmode.jp/doc-ja/org-ja.html
  - C-u C-c C-l 接頭辞C-uを付けてC-c C-lが呼び出されたときは、ファイル
    へのリンクが挿入され、ファイル名の補完を利用することができます。リ
    ンクされたファイルがカレントディレクトリにあるときや、カレントディ
    レクトリのサブディレクトリにあるとき、あるいはパスが‘../’を使って
    相対パスで書かれているときは、ファイルへのパスは、現在のOrg-modeファ
    イルからの相対パスとして挿入されます。それ以外の場合は絶対パスが使
    われ、可能であれば、ホームディレクトリには‘~/’が使われます。2つの
    C-uを付けることによって、絶対パス表記を明確に指定することができます。
- C-u C-u C-c C-l で必ず絶対パス表記になるか？
  - 絶対パス表記にはなるが、リンクの中身は相対パスのまま。
** CANCELLED 無駄な locate
   CLOSED: [2014-09-10 水 18:28]
- anything-for-files Help
  - ffap -> recentf -> buffer -> bookmark -> file-cache -> files-in-current-dir -> locate.
- locate を source から外すべし。
** TODO 〔xml well-formed を検査したい〕
- pom.xml を変更して commit. jenkins 夜間ジョブで失敗。原因は well-formed . ということがあった。
** TODO 〔xml schema validation 検証したい〕
   [2013-11-07 木 14:35]
- help rng-validate-mode
  - Minor mode performing continual validation against a RELAX NG schema.
  - rng-validate-mode は RELAX NG schema による検証を行うようだ。
  - xml schema による検証はないか？
- [[file:n:/howm/2013/11/2013-11-05-173331.howm.txt::*%E3%80%94xml%20schema%E3%80%95][〔xml schema〕]]
** TODO inits/my-*.el で require に失敗したら message に failure NAME を出力するべし
- どこで require 失敗したのかを把握したい。
- 例: ~/.emacs.d/inits/my-color-moccur.el
** TODO 〔org-mode 予定のバッティングに早く確実に気付く〕
- comefrome: [[file:n:/howm/2012/02/2012-02-23-105059-0000000000000000.howm.txt::*%E3%80%94org-mode%20%E4%BA%88%E5%AE%9A%E3%81%AE%E3%83%90%E3%83%83%E3%83%86%E3%82%A3%E3%83%B3%E3%82%B0%E3%81%AB%E6%97%A9%E3%81%8F%E7%A2%BA%E5%AE%9F%E3%81%AB%E6%B0%97%E4%BB%98%E3%81%8F%E3%80%95][〔org-mode 予定のバッティングに早く確実に気付く〕]]
- バッティングに早く確実に気付くためにはどうすればいい？
- 手動
  - C-c C-s (org-schedule) した直後に日付のところで C-c C-o (org-open-at-point) してバッティングの有無を見る。
- 自動
  - C-c C-s (org-schedule) した時や (org-agenda-list) したときに、ダブルブッキングがあったら warning を表示する。
** TODO 〔org-mode バージョンアップ〕
- [2013-12-05 木] M-x org-version : Org-mode version 7.8.11
- export html でページ内リンクの問題があるため、バージョンアップを控えている。
  - [[file:~/.emacs.d/memo/my-org-mode-history.org.txt::*%E3%80%94%E4%B8%8D%E5%85%B7%E5%90%884%20%E3%83%9A%E3%83%BC%E3%82%B8%E5%86%85%E3%83%AA%E3%83%B3%E3%82%AF%20org-export%20HTML%E3%80%95][〔不具合4 ページ内リンク org-export HTML〕]]
- export html を外部プロセスバッチ実行にすればこの問題は回避できる。
  - http://d.hatena.ne.jp/rubikitch/20101107/org2html
    - コマンドラインでorg→HTML変換する
- 「eval: ShellExecute failed: このコマンドを実行するのに十分な記憶域がありません。」問題の回避にもなる。
** CANCELLED 〔my-org-agenda-list-switch-to-buffer 改良案〕
- [[~/.emacs.d/inits/my-org-mode-buffer.el]]
- 現状
  - (kbd "C-:") => org-agenda
  - (kbd "C-M-:") => my-org-agenda-list-switch-to-buffer
- 改良案
  - (kbd "C-:") =>
    if (カレントバッファが "*Org Agenda*" である) then (org-agenda)
    else my-org-agenda-list-switch-to-buffer
  - つまりこうなる。
    - (kbd "C-:") 1回で "*Org Agenda*" バッファに切り替え。
    - (kbd "C-:") 2回で org-agenda
- 却下。
** TODO 〔mode-line に truncate-lines を表示する〕
- [[~/.emacs.d/inits/my-toggle-truncate-lines.el]]
** TODO 〔xml-mode, yaml-mode を比較する 〕
- xml-mode では要素名や属性名の補完ができる。 yaml-mode ではできるか？
- インデントなどのフォーマッタ。
- outline-demote, outline-promote のようなアウトラインのレベル変更、順序変更。
** TODO 〔[]を含むファイルパスへのリンク〕
- file:\\Isf-mine\情報エンジニアリング部\[0]bodais\【編集中】P部・研究所への展開の流れ.txt
  - こうすればリンクとして扱う。
- copy link したとき、先頭の file: が邪魔。これを取り除いてコピーするコマンドがほしい。
- バッチファイルを経由してファイルサーバファイルを開く。
  - 例 N:\Isf-mine\情報エンジニアリング部\［0］bodais\【編集中】P部・研究所への展開の流れ.txt.proxy.bat を経由してファイルサーバファイルを開く。
  - 例 @myscript\dos\fileserver-localopen.bat \\Isf-mine\情報エンジニアリング部\[0]bodais\【編集中】P部・研究所への展開の流れ.txt
** TODO 〔my-date-replace.el〕
- [[~/.emacs.d/inits/my-date-replace.el]]
** CANCELLED 〔howm メモを一括検索・一括置換したい〕
   CLOSED: [2014-09-10 水 18:29]
- 目的：howm メモを一括検索・一括置換したい
- 実現方法：N:/howm へのシンボリックリンクを eclipse workspace に置く。 eclipse で文字列検索する。
- メリット：検索履歴を複数保持できる。一括置換できる。
- デメリット：メモリ使用量。
- TortoiseSVN の grepWin で十分。
** TODO 〔howm メモの一部を export したい〕
- 目的： howm メモのうち non-work メモを sn に export したい。
- 実現方法：メモに non-work タグを記す。 script で grep and rsync
** TODO 〔emacs kill-ring およびレジスタと OS クリップボードを連携したい〕
- 目的：emacs kill-ring およびレジスタと OS クリップボードを連携したい。
- 実現方法：kill-ring およびレジスタから OS クリップボードに転記するコマンドを用意する。 vice versa.
** TODO 〔時刻計算〕
- e.g. input `10:37-1:52` output `8:45 (8.7h)`
- anything-calcul-expression では計算できない。
#+BEGIN_EXAMPLE
$ ruby -e 'a = "10:37".split(/:/); b = "1:52".split(/:/); a[0]=a[0].to_i; a[1]=a[1].to_i; b[0]=b[0].to_i; b[1]=b[1].to_i; puts (a[0]*60+a[1]-(b[0]*60+b[1]))/60.0'
8.75
#+END_EXAMPLE
** TODO 他の人の .emacs.d を読む
   [2014-09-08 月 13:15]
- http://coderepos.org/share/browser/dotfiles/emacs/kentaro/.emacs.d/conf
- http://emacs-jp.github.io/2014/09/03/dot-emacs-list/
- http://sakito.jp/moin/moin.cgi/dot.emacs.d
- 便利なものは取り込む。
** TODO migemo だけ IME off にしたい
   [2014-09-08 月 13:15]
- [[~/.emacs.d/inits/my-migemo.el]]
** TODO my-org-yank-shell-link
   [2014-09-08 月 13:20]
- [[~/.emacs.d/inits/my-org-mode-hyperlink.el]]
- パスが \\filserver\a\b\c である場合、
- [[shell:cygstart \\\\a\\b\\c][\\filserver\a\b\c] ] 形式に変換する。
** TODO use-package.el
   [2014-09-09 火]
- http://rubikitch.com/2014/09/09/use-package/
  - emacs use-package.el : Emacsの世界的権威が行っている最先端ラクラクinit.el整理術 | MELPA Emacs Lisp Elisp パッケージ インストール 設定 使い方 | るびきち×Emacs
  - :bind : コマンドをglobal-mapに割り当てる
  - このようにbindで設定されたコマンドはすべてautoloadされます。
** TODO 〔tr ライクに置換する〕
   [2014-09-09 火]
- tr "【】" "〔〕" のような置換をするコマンド。
- query-replace と同じように mini buffer から入力する。
- M-x shell-command-on-region RET tr  "【】" "〔〕"  でもいい。
- (shell-command-on-region (region-beginning) (region-end) "tr \"【】\" \"〔〕\"" (quote (4)) (quote (4)) nil t)
- http://d.hatena.ne.jp/yarb/20101219/p1
  - Emacsで全角の数字を半角にしたい
** TODO markdown-open-command
   [2014-09-09 火]
- ~/.emacs.d/inits/my-markdown-mode.el
- org-mode と同様に Emacs 上で export してブラウザで開くコマンドがほしい。
** TODO PC 毎に分離しない
   [2014-09-09 火]
- 分離にしなくていい定義を custom から inits に移動する。
- org-mode TODO status
- org-speed キーバインド
** TODO my-package.el
   [2014-09-09 火]
- ~/.emacs.d/inits/
- TODO http://qiita.com/catatsuy/items/5f1cd86e2522fd3384a0
** TODO グループウェア連携
   [2014-09-10 水 17:27]
- 実現したいこと
  - メール グループウェア 「スケジュールを下記の内容で登録しました。」本文をコピー。
  - emacs コマンド起動
    - 日付を読み取って n:/howm/2014/08/data/98/9da206-e516-40c0-b70f-c336d236c4ea/jmotto-20140911-1300.org.txt 形式で保存。
    - カレント heading に attach する。
** TODO my-pandoc-mode.el
   [2014-09-10 水 17:27]
- n:/tool/gnupack/gnupack_devel-11.00/home/.emacs.d/inits/my-pandoc-mode.el
- TODO 環境変数 PATH から pandoc.exe を探して (setq pandoc-binary xxx) する式をここに書いておけばいいのでは？
- 入力ファイルが UTF-8 マルチバイトだと失敗するようだ。オプションを指定すればいい？
  #+BEGIN_EXAMPLE
  Running `pandoc --read=org --write=native --output=n:/howm/2014/09//temp1.textile'
  pandoc.exe: Cannot decode byte '\x8c': Data.Text.Encoding.Fusion.streamUtf8: Invalid UTF-8 stream
  #+END_EXAMPLE
*** pandoc の問題1
- --write=textile にすると、
  URL の直前に "$": という文字列をつける。
  Redmine などでは "$":https://example.com/
  アンカーが $ でリンク先が https://example.com/ になるので問題はないが、
  コピー＆ペーストするときに困る。
  URL の直前に "$": という文字列をつけないでほしい。
- http://sky-y.github.io/site-pandoc-jp/users-guide/
  を見たが、オプションが見当たらない。
*** pandoc の問題2
- "_" アンダーバーを置換するが、置換しないでほしい。
** TODO アクセスログ
   [2014-09-10 水 18:27]
- org-mode link のアクセスログを記録する。
- アクセスカウントを集計する。どこからどこへ何回アクセスしたか。
** TODO org-mode 残り時間自動計算
   [2014-09-10 水 19:12]
- [[elisp:(progn (find-file "n:/howm/2014/09/2014-09-08-185130.howm.txt") (occur "残り時間"))]]
** TODO bookmark file を PC 毎に分離したい
   [2014-09-11 木 00:16]
- [[~/.emacs.d/custom-goat/my-emacs-custom.el]]
  (require 'bookmark)
  (setq bookmark-default-file (concat "~/.emacs.d/" emacs_custom "/bookmarks"))
** TODO 固有の稼働日、非稼働日を設定したい。
   [2014-09-11 木]
- [[~/.emacs.d/inits/my-japanese-holidays.el]]
- グループウェア予定表から export したファイルを読み取る。
** TODO calendar で選択した日付で moccur
   [2014-09-11 木]
- (moccur "2014-09-11" nil)
** TODO バッファの一部を暗号化する
   [2014-09-11 木]
- org-encrypt ?
- password など。
** TODO mail 検索
   [2014-09-11 木]
- 前提
  - フォルダ命名規約 C:\mail\mail-d20140911
  - Windows Live Mail Unicode text 形式で保存
- 特定の日付期間に限定
  - M-x calendar で指定
- メールヘッダーを対象に grep
- メール本文を対象に grep
** TODO org-clone-subtree-with-time-shift してさらに日付を書き換える
   [2014-09-11 木]
- 例 〔foo-d2014-09-11〕  を +1 clone したら 〔foo-d2014-09-12〕 に書き換える。
- hint query-replace-regexp
- 非営業日をスキップする。
- japanese-holiday から祝日を読み取れないか？
  - (describe-variable 'japanese-holidays)
** TODO emacs vc Subversion を使う
   [2014-09-11 木]
- C-x v v (vc-next-action)
** TODO emacs vc Git を使う
   [2014-09-11 木]
- C-x v v (vc-next-action) または package magit
** TODO dired-do-shell-command
   [2014-09-11 木]
- 画像ファイルを選択して X (dired-do-shell-command) cygstart で関連付け実行。
- いちいち cygstart と入力しなくてすむようにしたい。
- package あるはず？
** TODO use-package.el
   [2014-09-12 金]
- http://rubikitch.com/2014/09/09/use-package/
- emacs use-package.el : Emacsの世界的権威が行っている最先端ラクラクinit.el整理術 | MELPA Emacs Lisp Elisp パッケージ インストール 設定 使い方 | るびきち×Emacs
- (package-install 'use-package)
- c:/tool/gnupack/home/.emacs.d/inits/my-use-package.el
** TODO org-open-at-point
   [2014-09-12 金]
- org-open-at-point すると、 freemind 関連付けで .mm ファイルを開きたい。
- shell: cygstart a.mm では開けないことがある。
- shell: bluewind /paste a.mm ではいちおう開ける。
- PATH に N:\tool\bluewind を追加する。
** TODO 土日、祝日、稼働日、非稼働日を考慮した org-shiftright, org-shiftleft
   [2014-09-13 土]
- 1回 shift するたびに土日ならもう1回 shift すれば、土日はスキップできる。
** TODO (set-language-environment "Japanese") すると何が変わる？
   [2014-09-13 土]
- [[~/.emacs.d/inits/my-coding-system.el]]
- https://github.com/nanasess/dot.emacs/blob/master/init.d/japanese-init.el
** TODO define-key から bind-key* に移行する
   [2014-09-13 土]
- メリットは2つ。
  - bind-key* => メジャーモード・マイナーモードに依存しないで常に同じキーに割り当てる
  - describe-personal-keybindings => bind-key/bind-keysで割り当てたキーバインドをリストする
** TODO my-keymap-basis.el を分割する
   [2014-09-13 土]
- ~/.emacs.d/inits/my-keymap-basis.el
- 長すぎるので分割する。 my-keymap-basis.el から load する。
- e.g. my-keymap-ffap.el
** TODO bind-key と autoload を一度に行う
   [2014-09-13 土]
- e.g. ~/.emacs.d/inits/my-bind-key-package.el
- FUNCTION を2回書くのは無駄。
- FILE を複数回書くのは無駄。
** DONE expand-region.el
   [2014-09-14 日]
- [[~/.emacs.d/inits/my-expand-region-package.el]]
** TODO my-kill-buffer-file-name
   [2014-09-14 日]
- $HOME を ~ に置換する。
** TODO M-g M-g my-goto-line-with-linum-mode
** TODO markdown-mode で　org-beginning-of-line と同様のこと
   [2014-09-14 日]
- markdown-mode で　org-beginning-of-line と同様のことをやりたい。
** pandoc-run-pandoc
- M-x pandoc-run-pandoc が失敗する。
#+BEGIN_EXAMPLE
*Pandoc output*
Running `pandoc --read=markdown --write=native'
pandoc.exe: Cannot decode byte '\x93': Data.Text.Encoding.decodeUtf8: Invalid UTF-8 stream
#+END_EXAMPLE
- 入力ファイルがマルチバイト文字列を含まない場合、発生しない。


** CANCELLED org-agenda-mode で org-agenda-deadline が失敗する
   CLOSED: [2014-09-16 火 11:07]
   [2014-09-16 火 11:04]
- [2014-09-09 火] くらいまでは失敗していなかったはず。
- org-agenda-check-type: Not allowed in nil-type agenda buffers
- しばらくしたら解消した。原因不明、再現条件不明。
** TODO ファイルや見出しをリネームしたらリンクも追随する
   [2014-09-16 火]
** TODO CATEGORY を付与する
   [2014-09-16 火]
- レベル1見出しが〔a〕なら、 CATEGORY 〈a〉 を付与する。
- はじめからレベル1見出しを〈a〉にしておけば、それを転記するだけ。
- ついでにレベル1見出しを howm title である1行目に転記する。
- 見出しが ticketXXXX で始まる場合、タグ ticket[0-9]+ を ticketXXXX に付け替える。
** TODO M-x shell がおかしい
   [2014-09-16 火]
#+BEGIN_EXAMPLE
# exit
bash: $'exit\r': コマンドが見つかりません
#+END_EXAMPLE
- coding-system が違う？
** TODO anything-calcul-expression と同じことを anything なしで行う
   [2014-09-16 火]
- M-x calculator でいいか？
- "2+3" を region 選択してから M-x calculator しても *calculator* に取り込んでくれない。
- 取り込んでほしい。
- org-babel で実現可能？
** TODO org-babel-execute-src-block を使いたい
   [2014-09-16 火]
#+BEGIN_SRC perl
print 2+3
#+END_SRC
BEGIN で C-c C-c すると、 ```org-babel-execute-src-block: No org-babel-execute function for ruby!``` となって実行できない。
** TODO 時刻計算する calculator
   [2014-09-16 火]
- (+ '5 '90 '8)  ここで C-x C-e (eval-last-sexp) すれば、 103 と表示する。
- (+ '0:05 '1:30 '0:08) ここでコマンドを実行すれば "1.7 h" を挿入する。
** VERIFY 時間を合計する
   [2014-09-16 火]
- sample
  1. 会議A
     - (1.2 h)
  2. 会議B
     - (1.3 h)
  3. 会議B
     - (1.4 h)
- この見出し内でコマンド実行したら 1.2 + 1.3 + 1.4 = 3.9 を算出して kill-ring に格納する。
- 計算対象を hilight する。
- シェルスクリプトかワインライナーを用意して shell-command-on-region から呼び出せばいいか？
- cat sample.org.txt | awk '/[0-9].* h/ { gsub("[^0-9.]+", "", $0); SUM += $0 } END { print SUM }'
- [[~/.emacs.d/inits/my-calc.el]]
** TODO org-mode 見積もり時間と実績時間を並べて表示する
   [2014-09-17 水]
- さらに、見積もり時間と実績時間の差が50%以上あったら赤色表示。
